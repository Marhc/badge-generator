/******/!function(e){function t(i){if(r[i])return r[i].exports;var a=r[i]={exports:{},id:i,loaded:!1};return e[i].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}// webpackBootstrap
/******/
var r={};return t.m=e,t.c=r,t.p="",t(0)}([function(e,t,r){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}var a=r(1),o=i(a),s=r(2),n=i(s),l=r(3),u=i(l),c=r(4),m=i(c);angular.module("badgeGenerator",["ngAnimate","ngResource","ui.router","ngMaterial"]).config(o.default).config(n.default).run(u.default).controller("MainController",m.default)},function(e,t){"use strict";function r(e){"ngInject";e.debugEnabled(!0)}r.$inject=["$logProvider"],Object.defineProperty(t,"__esModule",{value:!0}),t.default=r},function(e,t){"use strict";function r(e,t){"ngInject";e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"main"}),t.otherwise("/")}r.$inject=["$stateProvider","$urlRouterProvider"],Object.defineProperty(t,"__esModule",{value:!0}),t.default=r},function(e,t){"use strict";function r(){"ngInject"}Object.defineProperty(t,"__esModule",{value:!0}),t.default=r},function(e,t,r){"use strict";function i(e){return e&&e.__esModule?e:{default:e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=r(5),s=i(o),n=r(6),l=i(n),u=r(7),c=i(u),m=function e(t){"ngInject";a(this,e),t.data={repository:"",branch:"master",style:"default",services:[]},t.services=s.default.map(function(e){return new c.default(e,t.data)}),t.data.services=t.services.map(function(e){return{service:e,selected:!1}}),t.formats=l.default,t.data.format=t.formats.filter(function(e){return e.default})[0],t.getSelectedServices=function(){return t.data.services.filter(function(e){return e.selected}).map(function(e){return e.service})},t.getSource=function(){return t.getSelectedServices().map(function(e){return t.data.format.template(e.title,e.getUrl(),e.getImageUrl(t.data.style))}).join("\n")+"\n\n"}};m.$inject=["$scope"],t.default=m},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=[{name:"GitHub forks",url:"https://github.com/{repository}",imageUrl:"https://img.shields.io/github/forks/{repository}.svg",title:"Build Status"},{name:"GitHub stars",url:"https://github.com/{repository}",imageUrl:"https://img.shields.io/github/stars/{repository}.svg",title:"Build Status"},{name:"GitHub license",url:"https://github.com/{repository}",imageUrl:"https://img.shields.io/github/license/{repository}.svg",title:"License"},{name:"Travis CI",url:"https://travis-ci.org/{repository}",imageUrl:"https://img.shields.io/travis/{repository}/{branch}.svg",title:"Build Status"},{name:"CircleCI",url:"https://circleci.com/gh/{repository}",imageUrl:"https://img.shields.io/circleci/project/{repository}/{branch}.svg",title:"Build Status"},{name:"CodeShip",url:"https://codeship.com/projects/{repository}",imageUrl:"https://circleci.com/gh/{repository}.svg?style=svg",title:"Build Status"},{name:"Code Climate (maintainability)",url:"https://codeclimate.com/github/{repository}",imageUrl:"https://img.shields.io/codeclimate/maintainability/{repository}.svg",title:"Maintainability"},{name:"Code Climate (% maintainability)",url:"https://codeclimate.com/github/{repository}",imageUrl:"https://img.shields.io/codeclimate/maintainability-percentage/{repository}.svg",title:"Maintainability"},{name:"Code Climate (tech debt)",url:"https://codeclimate.com/github/{repository}",imageUrl:"https://img.shields.io/codeclimate/tech-debt/{repository}.svg",title:"Technical Debt"},{name:"Code Climate (code coverage)",url:"https://codeclimate.com/github/{repository}",imageUrl:"https://img.shields.io/codeclimate/coverage/github/{repository}.svg",title:"Test Coverage"},{name:"Coveralls",url:"https://coveralls.io/r/{repository}?branch={branch}",imageUrl:"http://img.shields.io/coveralls/{repository}/{branch}.svg",title:"Test Coverage"},{name:"Codecov",url:"https://codecov.io/github/{repository}?branch={branch}",imageUrl:"https://img.shields.io/codecov/c/github/{repository}/{branch}.svg",title:"Test Coverage"},{name:"Gemnasium",url:"https://gemnasium.com/{repository}",imageUrl:"http://img.shields.io/gemnasium/{repository}.svg",title:"Dependency Status"},{name:"VersionEye",url:"https://www.versioneye.com/user/projects/{repository}",imageUrl:"https://www.versioneye.com/user/projects/{repository}/badge.svg",title:"Dependency Status"},{name:"David DM",url:"https://david-dm.org/{repository}",imageUrl:"https://img.shields.io/david/{repository}.svg",title:"Dependency Status"},{name:"David DM (dev)",url:"https://david-dm.org/{repository}#info=devDependencies",imageUrl:"https://img.shields.io/david/dev/{repository}.svg",title:"devDependency Status"},{name:"David DM (peer)",url:"https://david-dm.org/{repository}#info=devDependencies",imageUrl:"https://img.shields.io/david/peer/{repository}.svg",title:"peerDependency Status"},{name:"Packagist",url:"https://packagist.org/packages/{repository}",imageUrl:"https://img.shields.io/packagist/v/{repository}.svg",title:"Latest Stable Version"},{name:"Packagist PHP version",url:"https://packagist.org/packages/{repository}",imageUrl:"https://img.shields.io/packagist/php-v/{repository}.svg",title:"PHP version"},{name:"Packagist License",url:"https://packagist.org/packages/{repository}",imageUrl:"https://img.shields.io/packagist/l/{repository}.svg",title:"License"},{name:"NPM",url:"https://www.npmjs.com/package/{repository}",imageUrl:"https://img.shields.io/npm/v/{repository}.svg",title:"Latest Stable Version"},{name:"NPM License",url:"https://www.npmjs.com/package/{repository}",imageUrl:"https://img.shields.io/npm/l/{repository}.svg",title:"License"},{name:"NPM Total Downloads",url:"https://www.npmjs.com/package/{repository}",imageUrl:"https://img.shields.io/npm/dt/{repository}.svg",title:"NPM Downloads"},{name:"NPM Downloads per month",url:"https://www.npmjs.com/package/{repository}",imageUrl:"https://img.shields.io/npm/dm/{repository}.svg",title:"NPM Downloads"},{name:"Bower",url:"http://bower.io/search/?q={repository}",imageUrl:"https://img.shields.io/bower/v/{repository}.svg",title:"Latest Stable Version"},{name:"ESDoc",url:"https://doc.esdoc.org/github.com/{repository}/",imageUrl:"https://doc.esdoc.org/github.com/{repository}/badge.svg",title:"API Documentation"},{name:"Greenkeeper",url:"https://github.com/{repository}/issues?q=label%3Agreenkeeper",imageUrl:"https://badges.greenkeeper.io/{repository}.svg",title:"Greenkeeper"},{name:"Melpa",url:"http://melpa.org/#/{repository}/",imageUrl:"http://melpa.org/packages/{repository}-badge.svg",title:"MELPA"}]},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=[{name:"URL",template:function(e,t){return""+t}},{name:"Image URL",template:function(e,t,r){return""+r}},{name:"Markdown",template:function(e,t,r){return"[!["+e+"]("+r+")]("+t+")"},default:!0},{name:"Org Mode",template:function(e,t,r){return"[["+t+"][file:"+r+"]]"}},{name:"Textile",template:function(e,t,r){return"!"+r+"!:"+t}},{name:"Rdoc",template:function(e,t,r){return'{<img src="'+r+'" alt="'+e+'" />}['+t+"]"}},{name:"AsciiDoc",template:function(e,t,r){return"image:"+r+'["Build Status", link="'+t+'"]'}},{name:"RST",template:function(e,t,r){return".. image:: "+r+"\n  :target: "+t}},{name:"Pod",template:function(e,t,r){return'=for HTML <a href="'+t+'"><img src="'+r+'"></a>'}}]},function(e,t){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}(),a=function(){function e(t,i){r(this,e),this.name=t.name,this.url=t.url,this.imageUrl=t.imageUrl,this.title=t.title,this.data=i}return i(e,[{key:"getUrl",value:function(t){return e.parseUrl(this.url,this.data,t)}},{key:"getImageUrl",value:function(t,r){return e.parseUrl(this.imageUrl+("default"===t?"":"?style="+t),this.data,r)}}],[{key:"parseTemplate",value:function(e,t){var r=t.repository,i=t.branch;return e.replace("{repository}",r).replace("{branch}",i)}},{key:"parseUrl",value:function(t,r,i){var a=e.parseTemplate(t,r);return i&&(a+=(t.indexOf("?")===-1?"?":"&")+Math.floor((new Date).getTime()/1e3)),a}}]),e}();t.default=a}]),angular.module("badgeGenerator").run(["$templateCache",function(e){e.put("app/main/main.html",'<div layout="column" layout-align="start space-around" layout-margin="" layout-padding=""><md-content class="md-padding"><h1>GitHub Badge Generator</h1><md-whiteframe class="badges-settings md-whiteframe-z1" layout="column" layout-margin="" layout-padding=""><form name="badgesForm"><md-input-container flex=""><label>Repository</label> <input ng-model="data.repository" name="repository" required=""></md-input-container><div ng-messages="badgesForm.rate.$error"></div><div layout="row"><md-radio-group flex="75"><label>Services</label><div class="badges-services" layout="row" layout-wrap=""><md-checkbox ng-repeat="s in data.services" ng-model="s.selected" aria-label="{{s.service.name}}">{{s.service.name}}</md-checkbox></div></md-radio-group><md-radio-group ng-model="data.style" flex="25"><label>Style</label><md-radio-button value="default">Default</md-radio-button><md-radio-button value="plastic">Plastic</md-radio-button><md-radio-button value="flat-square">Flat Square</md-radio-button><md-radio-button value="for-the-badge">For the badge!</md-radio-button><md-radio-button value="social">Social</md-radio-button></md-radio-group></div></form></md-whiteframe><md-whiteframe class="badges-result md-whiteframe-z1" layout="column" layout-margin="" layout-padding="" ng-if="data.repository"><h4>Preview</h4><p class="badges-preview"><a ng-repeat="s in getSelectedServices()" ng-href="{{ s.getUrl() }}" class="badges-badge"><img ng-src="{{ s.getImageUrl(data.style, true) }}"></a></p><md-input-container><label>Source</label><md-select ng-model="data.format"><md-option ng-value="f" ng-repeat="f in formats">{{ f.name }}</md-option></md-select></md-input-container><pre class="badges-source">{{ getSource() }}</pre></md-whiteframe></md-content></div>')}]);